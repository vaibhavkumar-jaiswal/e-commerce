basePath: /
definitions:
  models.ErrorResponse-string:
    properties:
      error:
        example: error message
        type: string
      success:
        example: false
        type: boolean
    type: object
  models.Login:
    properties:
      password:
        example: password123
        type: string
      username:
        example: john_doe
        type: string
    type: object
  models.LoginResponse:
    properties:
      expiry:
        example: "2025-05-01T12:00:00Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
      user_details:
        $ref: '#/definitions/models.UserResponse'
    type: object
  models.SuccessResponse-models_LoginResponse:
    properties:
      data:
        $ref: '#/definitions/models.LoginResponse'
      success:
        example: true
        type: boolean
    type: object
  models.SuccessResponse-string:
    properties:
      data:
        type: string
      success:
        example: true
        type: boolean
    type: object
  models.UserResponse:
    properties:
      email:
        example: john.doe@gmail.com
        type: string
      first_name:
        example: John
        type: string
      full_name:
        example: John Doe
        type: string
      is_deleted:
        example: false
        type: boolean
      last_name:
        example: Doe
        type: string
      phone:
        example: "1234567890"
        type: string
      role_id:
        example: 97d699c0-24ff-48dc-b64a-c29353fa8865
        type: string
      user_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: vaibhav.jaiswal@gmail.com
    name: Vaibhav Jaiswal
  description: This is the API documentation for E-Commerce
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: E-Commerce API
  version: "1.0"
paths:
  /load-data:
    get:
      description: Preload data from JSON files into the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse-string'
      summary: Load Data
      tags:
      - Preload Data
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user
      parameters:
      - description: Login Data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse-models_LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse-string'
      summary: Login
      tags:
      - auth
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: Login Data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse-string'
      summary: Register a new user
      tags:
      - auth
schemes:
- http
swagger: "2.0"
